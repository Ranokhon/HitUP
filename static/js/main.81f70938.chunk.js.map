{"version":3,"sources":["components/launcher/index.js","redux/github/transform.js","redux/github/types.js","redux/preference/types.js","redux/github/reducer.js","redux/preference/reducer.js","redux/reducers.js","store.js","components/alert/index.js","components/icons/sun.js","components/loader/index.js","components/top-nav/index.js","lib/gh-trending/index.js","components/filters/language-filter/index.js","components/filters/view-filter/index.js","components/filters/date-jump-filter/index.js","components/filters/index.js","components/group-heading/index.js","components/icons/star.js","components/icons/fork.js","components/repository-list/list-item/index.js","components/repository-grid/grid-item/index.js","components/repository-grid/index.js","components/repository-list/index.js","containers/feed/index.js","redux/preference/actions.js","redux/github/actions.js","components/options-form/index.js","containers/options/index.js","router/index.js","app.js","index.js"],"names":["Launcher","react_default","a","createElement","className","alt","src","process","GithubTransform","createTransform","inboundState","key","repositories","length","Object","objectSpread","processing","error","outboundState","whitelist","PROCESS_FETCH_TRENDING","FETCH_TRENDING_SUCCESS","FETCH_TRENDING_FAILED","UPDATE_OPTIONS","UPDATE_VIEW_TYPE","UPDATE_DATE_TYPE","UPDATE_LANGUAGE","initialState","reducer","state","arguments","undefined","action","type","payload","viewType","dateJump","language","options","token","combineReducers","github","preference","persistedReducers","persistReducer","storage","stateReconciler","autoMergeLevel2","transforms","expireReducer","expireSeconds","expiredState","githubState","autoExpire","rootReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persist","persistStore","Alert","props","classnames","concat","heading","class","children","sun","assign","viewBox","version","width","height","d","fill","p-id","Loader","TopNav","tweet","isRunningExtension","window","chrome","runtime","id","href","rel","target","React","Component","trendingPeriodDefs","day","ghParamKey","week","month","LanguageFilter","filterInputRef","createRef","filterText","selectedIndex","showDropdown","focusFilterInput","_this","current","focus","onKeyDown","e","isEnterKey","keyCode","isUpKey","isDownKey","filteredLanguages","getFilteredLanguages","preventDefault","setState","prevState","selectLanguage","availableLanguages","selectedLanguage","value","updateLanguage","hideDropdown","filterLanguages","toggleDropdown","prevProps","this","ensureSelectedVisible","itemComponent","refs","activeItem","domNode","ReactDOM","findDOMNode","scrollIntoView","block","_this2","toConsumableArray","languages","filter","languageText","title","toLowerCase","selectedText","indexOf","_this3","map","counter","isSelectedIndex","refProp","ref","classNames","active-item","onMouseDown","placeholder","onBlur","onChange","renderLanguages","onClick","getLanguageDropdown","ViewFilter","changeSelected","updateViewType","active","selectedViewType","DateJumpFilter","dropdownOpen","updateDateJump","selectedDateJump","toggle","reactstrap_es","isOpen","getSelectedDateJump","Filters","language_filter","date_jump_filter","view_filter","GroupHeading","periodText","getTitle","getSubtitle","HalfStar","Star","role","fillRule","Fork","ListItem","repository","html_url","owner","login","name","moment","created_at","format","description","languageColor","style","backgroundColor","star","stars","fork","forks","toLocaleString","cursor","currentPeriodStars","star_HalfStar","avatar_url","onError","GridItem","slice","RepositoryGrid","repositoryGroup","groupHeading","group_heading","start","end","groupKey","data","items","data-group-key","grid_item","url","RepositoryList","list_item","propTypes","PropTypes","array","isRequired","string","FeedContainer","fetchNextRepositories","filters","getFilters","fetchTrending","currPreferences","prevPreferences","dateRange","lastRecords","subtract","startOf","components_alert","Link","to","message","tokenWarning","renderTokenWarning","renderErrors","repository_grid","repository_list","top_nav","components_filters","hasRepositories","renderRepositoriesList","loader","getCorrespondingGitHubLink","mapDispatchToProps","dispatch","axios","get","params","transformedFilters","access_token","since","transformFilters","then","response","reposities","Error","forEach","repo","ownerLogin","author","catch","connect","OptionsForm","success","saveOptions","updateOptions","_this$setState","defineProperty","OptionsContainer","options_form","AppRoutes","MemoryRouter","Switch","Route","exact","path","component","App","es","integration_react","loading","launcher","persistor","router","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.81f70938.chunk.js","sourcesContent":["import React from 'react';\n\nimport './styles.css';\n\nconst Launcher = () => (\n  <div className=\"launcher-body\">\n    <div className=\"logo-container\">\n      <img alt=\"logo\" src={process.env.PUBLIC_URL + \"/img/logo.svg\"} />\n      <div className=\"logo-text\">\n        <h4>Loading ...</h4>\n        <p className=\"text-muted\">We're testing your patience</p>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Launcher;\n","import { createTransform } from 'redux-persist';\n\nconst GithubTransform = createTransform(\n  // transform state on its way to being serialized and persisted.\n  (inboundState, key) => {\n    inboundState = inboundState || {};\n\n    if (!(inboundState.repositories && inboundState.repositories.length)) {\n      // reject to persist state with empty reposities\n      return null\n    }\n    // Do not persist `processing` flag or `error` information,\n    // as we want to start fresh on reload in such cases\n    inboundState = {\n      ...inboundState,\n      processing: false,\n      error: null\n    };\n\n    return inboundState;\n  },\n  // transform state being rehydrated\n  (outboundState, key) => {\n    return { ...outboundState };\n  },\n  // define which reducers this transform gets called for.\n  {\n    whitelist: ['github']\n  }\n);\n\nexport default GithubTransform;\n","export const PROCESS_FETCH_TRENDING = 'PROCESS_FETCH_TRENDING';\nexport const FETCH_TRENDING_SUCCESS = 'FETCH_TRENDING_SUCCESS';\nexport const FETCH_TRENDING_FAILED = 'FETCH_TRENDING_FAILED';\n","export const UPDATE_OPTIONS = 'UPDATE_OPTIONS';\nexport const UPDATE_VIEW_TYPE = 'UPDATE_VIEW_TYPE';\nexport const UPDATE_DATE_TYPE = 'UPDATE_DATE_TYPE';\nexport const UPDATE_LANGUAGE = 'UPDATE_LANGUAGE';\n","import { FETCH_TRENDING_FAILED, FETCH_TRENDING_SUCCESS, PROCESS_FETCH_TRENDING } from './types';\nimport { UPDATE_DATE_TYPE, UPDATE_LANGUAGE } from '../preference/types';\n\nexport const initialState = {\n  processing: false,\n  // Array of objects with the below format\n  // [\n  //    { start: '', end: '', data: [] },\n  //    { start: '', end: '', data: [] }\n  // ]\n  repositories: [],\n  error: null,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case PROCESS_FETCH_TRENDING:\n      return {\n        ...state,\n        processing: true,\n        error: null\n      };\n    case UPDATE_DATE_TYPE:\n    case UPDATE_LANGUAGE:\n      return {\n        ...state,\n        ...initialState\n      };\n    case FETCH_TRENDING_SUCCESS:\n      return {\n        ...state,\n        // Append the fetched repositories to existing list\n        repositories: action.payload,\n        processing: false,\n        error: null\n      };\n    case FETCH_TRENDING_FAILED:\n      return {\n        ...state,\n        processing: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_DATE_TYPE, UPDATE_LANGUAGE, UPDATE_OPTIONS, UPDATE_VIEW_TYPE } from './types';\n\nconst initialState = {\n  viewType: 'grid',\n  dateJump: 'week',\n  language: '',\n  options: {\n    token: '',\n  },\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_OPTIONS:\n      return {\n        ...state,\n        options: action.payload\n      };\n    case UPDATE_DATE_TYPE:\n      return {\n        ...state,\n        dateJump: action.payload\n      };\n    case UPDATE_VIEW_TYPE:\n      return {\n        ...state,\n        viewType: action.payload\n      };\n    case UPDATE_LANGUAGE:\n      return {\n        ...state,\n        language: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport preference from './preference/reducer';\nimport github from './github/reducer';\n\nexport default combineReducers({\n  github,\n  preference,\n});\n","import autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport { applyMiddleware, createStore } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nimport expireReducer from 'redux-persist-expire';\n\nimport GithubTransform from './redux/github/transform';\nimport githubState from './redux/github/reducer';\nimport rootReducer from './redux/reducers';\n\nconst persistedReducers = persistReducer(\n  {\n    key: 'hitup:root',\n    storage: storage,\n    stateReconciler: autoMergeLevel2,\n    transforms: [\n      GithubTransform,\n      expireReducer('github', {\n        expireSeconds: 3600,\n        expiredState: { ...githubState },\n        autoExpire: true\n      })\n    ]\n  },\n  rootReducer,\n);\n\nexport const store = createStore(persistedReducers, composeWithDevTools(\n  applyMiddleware(\n    thunk,\n  ),\n));\n\nexport const persist = persistStore(store);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst Alert = (props) => (\n  <div className={ classnames('alert', `alert-${props.type}`, props.className) }>\n    { props.heading && <h4 class=\"alert-heading\">{props.heading}</h4>}\n    { props.children }\n  </div>\n);\n\nAlert.propTypes = {\n  type: PropTypes.string.isRequired\n};\n\nexport default Alert;\n","import React from 'react';\n\nexport default (props) => (\n    <svg {...props} viewBox=\"0 0 1024 1024\" version=\"1.1\" width=\"64\" height=\"64\">\n        <path d=\"M960 512l-128 128v192h-192l-128 128-128-128H192v-192l-128-128 128-128V192h192l128-128 128 128h192v192z\" fill=\"#FFD878\" p-id=\"flame\"></path>\n        <path d=\"M736 512a224 224 0 1 0-448 0 224 224 0 1 0 448 0z\" fill=\"#FFBE00\" p-id=\"inner-circle\"></path>\n        <path d=\"M512 109.248L626.752 224H800v173.248L914.752 512 800 626.752V800h-173.248L512 914.752 397.248 800H224v-173.248L109.248 512 224 397.248V224h173.248L512 109.248M512 64l-128 128H192v192l-128 128 128 128v192h192l128 128 128-128h192v-192l128-128-128-128V192h-192l-128-128z\" fill=\"#eee\" p-id=\"outer-line\"></path>\n        {/* <path d=\"M512 320c105.888 0 192 86.112 192 192s-86.112 192-192 192-192-86.112-192-192 86.112-192 192-192m0-32a224 224 0 1 0 0 448 224 224 0 0 0 0-448z\" fill=\"#4D5152\" p-id=\"inner-line\"></path> */}\n    </svg>\n);\n","import React from 'react';\n\nimport './styles.css';\nimport Sun from '../icons/sun';\n\nconst Loader = () => (\n  <div className=\"loading-indicator\">\n    <Sun className='fa-spin'/>\n  </div>\n);\n\nexport default Loader;\n","import React from 'react';\n\nimport './styles.css';\n\nclass TopNav extends React.Component {\n  tweet = 'HitUP – Most starred projects on Github by @kamranahmedse https://github.com/kamranahmedse/githunt';\n\n  render() {\n    // We need that to show the extension button only if not running in extension\n    const isRunningExtension = window.chrome &&\n      window.chrome.runtime &&\n      window.chrome.runtime.id;\n\n    return (\n      <div className='top-nav'>\n        <div className=\"container clearfix\">\n          <a href='https://github.com/wonderbeyond/hitup'\n             rel=\"noopener noreferrer\"\n             target='_blank'\n             className=\"logo clearfix float-left\">\n             <img alt=\"logo\" src={process.env.PUBLIC_URL + \"/img/logo.svg\"} />\n          </a>\n          <div className=\"logo-text\">\n            <h4>HitUP</h4>\n            <p className=\"text-muted\">Find to<span className=\"top-text\"><span className=\"top-arrow\"></span>p</span> things\n            </p>\n          </div>\n          <div className=\"float-right external-btns\">\n            <a href='http://github.com/wonderbeyond/hitup'\n               target='_blank'\n               rel=\"noopener noreferrer\"\n               className=\"btn btn-dark\"><i className=\"fa fa-github mr-1\"></i> View Source</a>\n            {\n              !isRunningExtension && (\n                <a href='https://wonder.page.link/hitup-chrome'\n                   target='_blank'\n                   rel=\"noopener noreferrer\"\n                   className=\"btn btn-danger d-none d-sm-none d-md-inline-block d-xl-inline-block d-lg-inline-block\">\n                  <i className=\"fa fa-chrome mr-1\"></i> Use Extension\n                </a>\n              )\n            }\n            {\n              isRunningExtension && (\n                <a href='https://github.com/wonderbeyond/hitup/issues'\n                   target='_blank'\n                   rel=\"noopener noreferrer\"\n                   className=\"btn btn-danger d-none d-sm-none d-md-inline-block d-xl-inline-block d-lg-inline-block\">\n                  <i className=\"fa fa-comment mr-1\"></i> Give Feedback\n                </a>\n              )\n            }\n            {/* <a href={ `https://twitter.com/intent/tweet?text=${this.tweet}` }\n               target='_blank'\n               rel=\"noopener noreferrer\"\n               className=\"btn btn-primary btn-tweet d-none d-sm-none d-md-none d-xl-inline-block d-lg-inline-block\">\n              <i className=\"fa fa-twitter mr-1\"></i> Tweet\n            </a> */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TopNav;\n","export {default as languages} from './languages.json';\n\nexport const trendingPeriodDefs = {\n    'day': {heading: 'Today', ghParamKey: 'daily'},\n    'week': {heading: 'This Week', ghParamKey: 'weekly'},\n    'month': {heading: 'This Month', ghParamKey: 'monthly'},\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './styles.css';\nimport {languages} from 'lib/gh-trending';\n\nclass LanguageFilter extends React.Component {\n  filterInputRef = React.createRef();\n\n  state = {\n    filterText: '',\n    selectedIndex: 0,\n    showDropdown: false\n  };\n\n  focusFilterInput = () => {\n    this.filterInputRef.current.focus();\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    // only scroll into view if the active item changed since last render\n    if (prevState.selectedIndex !== this.state.selectedIndex) {\n      this.ensureSelectedVisible();\n    }\n\n    // If the dropdown has just been made visible focus the input\n    if (this.state.showDropdown && !prevState.showDropdown) {\n      this.focusFilterInput();\n    }\n  }\n\n  ensureSelectedVisible() {\n    const itemComponent = this.refs.activeItem;\n    if (!itemComponent) {\n      return;\n    }\n\n    const domNode = ReactDOM.findDOMNode(itemComponent);\n    if (!domNode) {\n      return;\n    }\n\n    domNode.scrollIntoView({ block: 'end' });\n  }\n\n  getFilteredLanguages() {\n    let availableLanguages = [...languages];\n\n    if (this.state.filterText) {\n      availableLanguages = availableLanguages.filter(language => {\n        const languageText = language.title.toLowerCase();\n        const selectedText = this.state.filterText.toLowerCase();\n\n        return languageText.indexOf(selectedText) >= 0;\n      });\n    }\n\n    return availableLanguages;\n  }\n\n  renderLanguages() {\n    let availableLanguages = this.getFilteredLanguages();\n\n    return availableLanguages.map((language, counter) => {\n      const isSelectedIndex = counter === this.state.selectedIndex;\n\n      // This will be used in making sure of the element visibility\n      const refProp = isSelectedIndex ? { ref: 'activeItem' } : {};\n\n      return (\n        <a className={ classNames('select-menu-item', { 'active-item': isSelectedIndex }) }\n           { ...refProp }\n           onMouseDown={ () => this.selectLanguage(counter) }\n           key={ counter }>\n          <span className=\"select-menu-item-text\">{ language.title }</span>\n        </a>\n      );\n    });\n  }\n\n  onKeyDown = e => {\n    const { selectedIndex } = this.state;\n\n    const isEnterKey = e.keyCode === 13;\n    const isUpKey = e.keyCode === 38;\n    const isDownKey = e.keyCode === 40;\n\n    if (!isUpKey && !isDownKey && !isEnterKey) {\n      return;\n    }\n\n    const filteredLanguages = this.getFilteredLanguages();\n    e.preventDefault();\n\n    // arrow up/down button should select next/previous list element\n    if (isUpKey && selectedIndex > 0) {\n      this.setState(prevState => ({\n        selectedIndex: prevState.selectedIndex - 1\n      }));\n    } else if (isDownKey && selectedIndex < (filteredLanguages.length - 1)) {\n      this.setState(prevState => ({\n        selectedIndex: prevState.selectedIndex + 1\n      }));\n    } else if (isEnterKey && filteredLanguages[selectedIndex]) {\n      this.selectLanguage(selectedIndex);\n    }\n  };\n\n  selectLanguage = (selectedIndex) => {\n    let availableLanguages = this.getFilteredLanguages();\n    if (this.props.selectedLanguage === (availableLanguages[selectedIndex].value)) {\n      // selected prev language\n      return\n    }\n    const filteredLanguages = this.getFilteredLanguages();\n    const selectedLanguage = filteredLanguages[selectedIndex];\n    if (!selectedLanguage) {\n      return;\n    }\n\n    this.setState({\n      selectedIndex: selectedIndex,\n      filterText: '',\n      showDropdown: false\n    });\n\n    this.props.updateLanguage(selectedLanguage.value);\n  };\n\n  hideDropdown = () => {\n    this.setState({\n      showDropdown: false,\n      filterText: ''\n    });\n  };\n\n  filterLanguages = (e) => {\n    this.setState({\n      filterText: e.target.value,\n      selectedIndex: 0      // Reset and select the first language\n    });\n  };\n\n  getLanguageDropdown() {\n    return (\n      <div className=\"language-select\">\n        <div className=\"select-menu-header\">\n          <span className=\"select-menu-title\">Search Language</span>\n        </div>\n        <div className=\"select-menu-filters\">\n          <div className=\"select-menu-text-filter\">\n            <input type=\"text\"\n                   className=\"form-control\"\n                   placeholder=\"Filter Languages\"\n                   ref={ this.filterInputRef }\n                   onBlur={ this.hideDropdown }\n                   onChange={ this.filterLanguages }\n                   onKeyDown={ this.onKeyDown }\n            />\n          </div>\n        </div>\n        <div className=\"select-menu-list\">\n          { this.renderLanguages() }\n        </div>\n      </div>\n    );\n  }\n\n  toggleDropdown = () => {\n    this.setState(prevState => ({\n      showDropdown: !prevState.showDropdown\n    }));\n  };\n\n  render() {\n    return (\n      <div className='language-filter-wrap'>\n        <button onClick={ this.toggleDropdown } className=\"btn btn-light language-filter shadowed\">\n          <i className=\"fa fa-filter mr-2\"></i>\n          { this.props.selectedLanguage || 'All Languages' }\n        </button>\n        { this.state.showDropdown && this.getLanguageDropdown() }\n      </div>\n    );\n  }\n}\n\nLanguageFilter.propTypes = {\n  updateLanguage: PropTypes.func.isRequired,\n  selectedLanguage: PropTypes.string\n};\n\nexport default LanguageFilter;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nclass ViewFilter extends React.Component {\n  state = {};\n\n  changeSelected = (viewType) => {\n    this.props.updateViewType(viewType);\n  };\n\n  render() {\n    return (\n      <div className=\"view-type-wrap\">\n        <div className=\"view-type btn shadowed cursor-default\">\n          <button onClick={ () => this.changeSelected('grid') } className={ classNames({ active: this.props.selectedViewType === 'grid' }) }>\n            <i className=\"fa fa-table mr-2\"></i>\n            Grid\n          </button>\n          <button onClick={ () => this.changeSelected('list') } className={ classNames({ active: this.props.selectedViewType === 'list' }) }>\n            <i className=\"fa fa-list mr-2\"></i>\n            List\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nViewFilter.propTypes = {\n  updateViewType: PropTypes.func.isRequired,\n  selectedViewType: PropTypes.string,\n};\n\nexport default ViewFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap';\nimport {trendingPeriodDefs} from 'lib/gh-trending';\n\nimport './styles.css';\n\nclass DateJumpFilter extends React.Component {\n  state = {\n    dropdownOpen: false\n  };\n\n  updateDateJump = (dateJump) => {\n    if (dateJump === this.props.selectedDateJump) {\n      return;\n    }\n\n    this.props.updateDateJump(dateJump);\n  };\n\n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  };\n\n  getSelectedDateJump() {\n    return trendingPeriodDefs[this.props.selectedDateJump].heading\n  }\n\n  render() {\n    return (\n      <Dropdown className='date-jump-wrap' isOpen={ this.state.dropdownOpen } toggle={ this.toggle }>\n        <DropdownToggle className='date-jump-type shadowed'>\n          <i className=\"fa fa-calendar mr-2\"></i>\n          { this.getSelectedDateJump() }\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem onClick={ () => this.updateDateJump('day') }>Today</DropdownItem>\n          <DropdownItem onClick={ () => this.updateDateJump('week') }>This Week</DropdownItem>\n          <DropdownItem onClick={ () => this.updateDateJump('month') }>This Month</DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    );\n  }\n}\n\nDateJumpFilter.propTypes = {\n  updateDateJump: PropTypes.func.isRequired,\n  selectedDateJump: PropTypes.string\n};\n\nexport default DateJumpFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport LanguageFilter from './language-filter';\nimport ViewFilter from './view-filter';\nimport './styles.css';\nimport DateJumpFilter from './date-jump-filter';\n\nconst Filters = (props) => (\n  <div className=\"filters-wrap mt-3 mt-sm-3 mt-md-0 mt-xl-0 mt-lg-0\">\n    <div className=\"filter-item\">\n      <LanguageFilter\n        selectedLanguage={ props.selectedLanguage }\n        updateLanguage={ props.updateLanguage }\n      />\n    </div>\n    <div className=\"filter-item\">\n      <DateJumpFilter\n        updateDateJump={ props.updateDateJump }\n        selectedDateJump={ props.selectedDateJump }\n      />\n    </div>\n    <div className=\"filter-item d-none d-sm-none d-md-none d-xl-block d-lg-block\">\n      <ViewFilter\n        selectedViewType={ props.selectedViewType }\n        updateViewType={ props.updateViewType }\n      />\n    </div>\n  </div>\n);\n\nFilters.propTypes = {\n  updateLanguage: PropTypes.func.isRequired,\n  updateViewType: PropTypes.func.isRequired,\n  updateDateJump: PropTypes.func.isRequired,\n  selectedLanguage: PropTypes.string,\n  selectedViewType: PropTypes.string,\n  selectedDateJump: PropTypes.string\n};\n\nexport default Filters;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {trendingPeriodDefs} from 'lib/gh-trending';\n\nimport './styles.css';\n\nclass GroupHeading extends React.Component {\n  getTitle() {\n    return \"Trending repositories on GitHub\"\n  }\n\n  getSubtitle() {\n    let periodText = trendingPeriodDefs[this.props.dateJump].heading;\n    return `${periodText}`;\n  }\n\n  render() {\n    return (\n      <div className=\"group-heading\">\n        <h4>\n          <span className=\"text-capitalizes\">{ this.getTitle() }</span>\n          <span className=\"small text-muted ml-2\">\n            { this.getSubtitle() }\n          </span>\n        </h4>\n      </div>\n    );\n  }\n}\n\nGroupHeading.propTypes = {\n  dateJump: PropTypes.oneOf(['week', 'month', 'year', 'day'])\n};\n\nexport default GroupHeading;\n","import React from 'react';\n\nconst Star = (props) => (\n  <svg viewBox=\"0 0 14 16\" version=\"1.1\" width=\"14\" height=\"16\" role=\"img\">\n    <path fillRule=\"evenodd\" d=\"M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z\"/>\n  </svg>\n);\n\n// https://www.iconfont.cn/search/index?searchType=icon&q=star\nexport const HalfStar = (props) => (\n  <svg viewBox=\"0 0 1024 1024\" version=\"1.1\"  width=\"16\" height=\"16\">\n    <path d=\"M785.352203 933.397493c-4.074805 0-8.151657-0.970094-11.833513-3.007497l-261.311471-142.488225L250.942821 930.388972c-8.343015 4.559852-18.527982 3.8814-26.28669-1.599428-7.760754-5.5279-11.640108-14.987343-10.088776-24.347524l47.578622-285.365306L72.563154 429.470355c-6.594185-6.547113-8.971325-16.295128-6.110161-25.122167 2.814092-8.850575 10.379395-15.397688 19.546172-16.949021l285.512662-47.577598 118.529557-236.989529c4.172019-8.391111 12.803607-13.701047 22.165836-13.701047 9.359158 0 17.992793 5.309936 22.163789 13.701047l118.529557 236.989529 285.511639 47.577598c9.217942 1.551332 16.73208 8.051373 19.593244 16.949021 2.813069 8.875135 0.48607 18.575054-6.109138 25.122167L762.264369 619.077737l47.577598 285.365306c1.50119 9.360182-2.37714 18.819624-10.087753 24.347524C795.487028 931.797042 790.394033 933.397493 785.352203 933.397493zM512.206196 734.747153c4.073782 0 8.196683 0.968048 11.880585 3.006474l228.379431 124.545574-41.268916-247.634983c-1.308809-7.90504 1.257643-16.005532 6.932899-21.63167l164.55787-164.555823-250.398934-41.709961c-7.855922-1.308809-14.549368-6.304589-18.140149-13.408381l-101.942787-203.915249\" />\n  </svg>\n);\n\nexport default Star;\n","import React from 'react';\n\nconst Fork = (props) => (\n  <svg viewBox=\"0 0 10 16\" version=\"1.1\" width=\"10\" height=\"16\" role=\"img\">\n    <path fillRule=\"evenodd\"\n          d=\"M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path>\n  </svg>\n);\n\nexport default Fork;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\nimport moment from 'moment';\nimport Star, {HalfStar} from '../../icons/star';\nimport Fork from '../../icons/fork';\nimport Watcher from '../../icons/watcher';\n\nclass ListItem extends React.Component {\n  render() {\n    return (\n      <div className=\"col-12 list-item-container\">\n        <div className=\"list-item-body\">\n          <div className=\"repo-header\">\n            <h3>\n              <a href={ this.props.repository.html_url } rel=\"noopener noreferrer\" target=\"_blank\">\n                <span className=\"text-normal\">{ this.props.repository.owner.login } / </span>\n                { this.props.repository.name }\n              </a>\n            </h3>\n            <p className=\"repo-meta text-muted small\">Built by &middot; <a href={ this.props.repository.owner.html_url } rel=\"noopener noreferrer\" target=\"_blank\">{ this.props.repository.owner.login }</a> &middot; { moment(this.props.repository.created_at).format('MMMM D YYYY') }</p>\n          </div>\n          <div className=\"repo-body\">\n            <p>{ this.props.repository.description || 'No description given.' }</p>\n          </div>\n          <div className=\"repo-footer\">\n            {\n              this.props.repository.language && (\n                <span className=\"d-inline-block mr-3\">\n                  {this.props.repository.languageColor && <span className=\"d-inline-block mr-3 repo-meta-language\">\n                    <span className=\"repo-language-color ml-0\" style={{ backgroundColor: this.props.repository.languageColor }}></span>\n                    &nbsp;{this.props.repository.language}\n                  </span>}\n                </span>\n              )\n            }\n            <a className=\"muted-link d-inline-block mr-3\"\n               href={ `${this.props.repository.html_url}/stargazers` }\n               rel=\"noopener noreferrer\"\n               target=\"_blank\">\n              <Star/>\n              { this.props.repository.stars }\n            </a>\n            <a className=\"muted-link d-inline-block mr-3\"\n               href={ `${this.props.repository.html_url}/network/members` }\n               rel=\"noopener noreferrer\"\n               target=\"_blank\">\n              <Fork/>\n              { this.props.repository.forks.toLocaleString() }\n            </a>\n            <span style={{cursor: \"help\"}} className=\"text-muted d-inline-block mr-3\" title={ `${this.props.repository.currentPeriodStars} stars ` + {\n                'day': 'today',\n                'week': 'this week',\n                'month': 'this month',\n              }[this.props.dateJump]}>\n              <HalfStar/>\n              { this.props.repository.currentPeriodStars }\n            </span>\n          </div>\n        </div>\n\n        <a href={ this.props.repository.owner.html_url }\n           target=\"_blank\"\n           rel=\"noopener noreferrer\"\n           className=\"author-link d-none d-lg-block d-xl-block d-md-block\">\n          <img className='author-img'\n               src={ this.props.repository.owner.avatar_url }\n               onError={ (e) => {\n                 e.target.src = '/img/logo.svg';\n               } }\n               alt={ this.props.repository.owner.login }/>\n        </a>\n      </div>\n    );\n  }\n}\n\nListItem.propTypes = {\n  repository: PropTypes.object.isRequired\n};\n\nexport default ListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport './styles.css';\nimport Star, {HalfStar} from '../../icons/star';\nimport Fork from '../../icons/fork';\n// import Watcher from '../../icons/watcher';\n\nclass GridItem extends React.Component {\n  render() {\n    return (\n      <div className=\"col-xl-4 col-lg-4 col-md-6 col-sm-12 col-12 grid-item-container\">\n        <div className=\"grid-item-body\">\n          <div className=\"author-header clearfix\">\n            <a href={ this.props.repository.owner.html_url } rel=\"noopener noreferrer\" target=\"_blank\">\n              <div className=\"author-img\">\n                <img src={ this.props.repository.owner.avatar_url }\n                     onError={ (e) => {\n                       e.target.src = '/img/logo.svg';\n                     } }\n                     alt={ this.props.repository.owner.login }/>\n              </div>\n              <div className=\"author-details\">\n                <h5>{ this.props.repository.owner.login }</h5>\n                <p className=\"small text-muted\">View Profile</p>\n              </div>\n            </a>\n          </div>\n          <div className=\"repo-header\">\n            <h5>\n              <a href={ this.props.repository.html_url } rel=\"noopener noreferrer\" target=\"_blank\">\n                <span className=\"repo-name\">{ this.props.repository.name }</span>\n              </a>\n            </h5>\n            <p className=\"repo-meta text-muted small\">\n              {this.props.repository.languageColor && <span className=\"d-inline-block mr-3 repo-meta-language\">\n                <span className=\"repo-language-color ml-0\" style={{backgroundColor: this.props.repository.languageColor}}></span>\n                &nbsp;{ this.props.repository.language }\n              </span>}\n              <span className=\"d-inline-block repo-meta-created-at\">Built at { moment(this.props.repository.created_at).format('MMMM D, YYYY') }</span>\n            </p>\n          </div>\n          <div className=\"repo-body\">\n            <p>{ (this.props.repository.description && this.props.repository.description.slice(0, 140)) || 'No description given.' }</p>\n          </div>\n          <div className=\"repo-footer\">\n            {/* {\n              this.props.repository.language && (\n                <span className=\"d-inline-block mr-3\">\n                  <span className=\"repo-language-color ml-0\"></span>\n                  <span itemProp=\"programmingLanguage\">\n                    { this.props.repository.language }\n                  </span>\n                </span>\n              )\n            } */}\n            <a className=\"muted-link d-inline-block mr-3\"\n               href={ `${this.props.repository.html_url}/stargazers` }\n               rel=\"noopener noreferrer\"\n               target=\"_blank\">\n              <Star/>\n              { this.props.repository.stars }\n            </a>\n            <a className=\"muted-link d-inline-block mr-3\"\n               href={ `${this.props.repository.html_url}/network/members` }\n               rel=\"noopener noreferrer\"\n               target=\"_blank\">\n              <Fork/>\n              { this.props.repository.forks.toLocaleString() }\n            </a>\n            <span style={{cursor: \"help\"}} className=\"text-muted d-inline-block mr-3\" title={ `${this.props.repository.currentPeriodStars} stars ` + {\n                'day': 'today',\n                'week': 'this week',\n                'month': 'this month',\n              }[this.props.dateJump]}>\n              <HalfStar/>\n              { this.props.repository.currentPeriodStars }\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nGridItem.propTypes = {\n  repository: PropTypes.object.isRequired\n};\n\nexport default GridItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport GridItem from './grid-item';\nimport './styles.css';\nimport GroupHeading from '../group-heading';\n\nclass RepositoryGrid extends React.Component {\n  renderGroup(repositoryGroup, counter) {\n    let groupHeading = '';\n    // for the first repository group, we have the\n    // heading among the filters out of the grid\n    if (counter !== 0) {\n      groupHeading = (\n        <div className=\"row row-group\">\n          <GroupHeading\n            start={ repositoryGroup.start }\n            end={ repositoryGroup.end }\n            dateJump={ this.props.dateJump }\n          />\n        </div>\n      );\n    }\n\n    const groupKey = `${repositoryGroup.start}_${repositoryGroup.end}_${counter}`;\n    const repositories = repositoryGroup.data.items;\n\n    return (\n      <div key={ groupKey } data-group-key={ groupKey }>\n        { groupHeading }\n        <div className=\"row grid-container\">\n          { repositories.map(repository => <GridItem repository={ repository } key={ repository.id }/>) }\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"repositories-grid\">\n        <div className=\"row grid-container\">\n          { this.props.repositories.map(repository => <GridItem dateJump={ this.props.dateJump } repository={ repository } key={ repository.url }/>) }\n        </div>\n      </div>\n    );\n  }\n}\n\nRepositoryGrid.propTypes = {\n  repositories: PropTypes.array.isRequired,\n  dateJump: PropTypes.string.isRequired\n};\n\nexport default RepositoryGrid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\nimport ListItem from './list-item';\nimport GroupHeading from '../group-heading';\nimport RepositoryGrid from '../repository-grid';\n\nclass RepositoryList extends React.Component {\n\n  renderGroup(repositoryGroup, counter) {\n    let groupHeading = '';\n    // for the first repository group, we have the\n    // heading among the filters out of the grid\n    if (counter !== 0) {\n      groupHeading = (\n        <div className=\"row row-group\">\n          <GroupHeading\n            start={ repositoryGroup.start }\n            end={ repositoryGroup.end }\n            dateJump={ this.props.dateJump }\n          />\n        </div>\n      );\n    }\n\n    const groupKey = `${repositoryGroup.start}_${repositoryGroup.end}_${counter}`;\n    const repositories = repositoryGroup.data.items;\n\n    return (\n      <div key={ groupKey } data-group-key={ groupKey }>\n        { groupHeading }\n        <div className=\"row list-container\">\n          { repositories.map(repository => <ListItem repository={ repository } key={ repository.id }/>) }\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"row list-container\">\n        {\n          this.props.repositories.map(repository => <ListItem dateJump={ this.props.dateJump } repository={repository} key={repository.url} />)\n        }\n      </div>\n    );\n  }\n}\n\nRepositoryGrid.propTypes = {\n  repositories: PropTypes.array.isRequired,\n  dateJump: PropTypes.string.isRequired\n};\n\nexport default RepositoryList;\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport './styles.css';\nimport Alert from '../../components/alert';\nimport Loader from '../../components/loader';\nimport TopNav from '../../components/top-nav';\nimport Filters from '../../components/filters';\nimport GroupHeading from '../../components/group-heading';\nimport { fetchTrending } from '../../redux/github/actions';\nimport RepositoryList from '../../components/repository-list';\nimport RepositoryGrid from '../../components/repository-grid';\nimport { updateDateJump, updateLanguage, updateViewType } from '../../redux/preference/actions';\nimport {trendingPeriodDefs} from 'lib/gh-trending';\n\nclass FeedContainer extends React.Component {\n  componentDidMount() {\n    const existingRepositories = this.props.github.repositories || [];\n\n    // If there are no loaded repositories before, fetch them\n    if (existingRepositories.length === 0) {\n      this.fetchNextRepositories();\n    }\n  }\n\n  fetchNextRepositories() {\n    const filters = this.getFilters();\n    this.props.fetchTrending(filters);\n  }\n\n  componentDidUpdate(prevProps) {\n    const currPreferences = this.props.preference;\n    const prevPreferences = prevProps.preference;\n\n    // If language or dateJump has been updated, reload\n    // the repositories\n    if (currPreferences.language !== prevPreferences.language ||\n      currPreferences.dateJump !== prevPreferences.dateJump) {\n      this.fetchNextRepositories();\n    }\n  }\n\n  getFilters() {\n    const filters = {};\n    filters.language = this.props.preference.language;\n    filters.token = this.props.preference.options.token;\n    filters.dateJump = this.props.preference.dateJump\n    return filters;\n  }\n\n  getNextDateRange() {\n    const repositories = this.props.github.repositories || [];\n    const dateJump = this.props.preference.dateJump;\n\n    const dateRange = {};\n    const lastRecords = repositories[repositories.length - 1];\n\n    if (lastRecords) {\n      dateRange.start = moment(lastRecords.start).subtract(1, dateJump).startOf('day');\n      dateRange.end = lastRecords.start;\n    } else {\n      dateRange.start = moment().subtract(1, dateJump).startOf('day');\n      dateRange.end = moment().startOf('day');\n    }\n\n    return dateRange;\n  }\n\n  getCorrespondingGitHubLink() {\n    return \"https://github.com/trending/\" +\n      this.props.preference.language +\n      \"?since=\" +\n      trendingPeriodDefs[this.props.preference.dateJump].ghParamKey;\n  }\n\n  renderTokenWarning() {\n    return !this.props.preference.options.token && (\n      <Alert type='warning'>\n        Make sure to\n        <strong className='ml-1 mr-1'>\n          <Link to='/options'>add a token</Link>\n        </strong>\n        to avoid hitting the rate limit\n      </Alert>\n    );\n  }\n\n  renderErrors() {\n    if (!this.props.github.error) {\n      return null;\n    }\n\n    let message = '';\n    switch (this.props.github.error.toLowerCase()) {\n      case 'bad credentials':\n        message = (\n          <span>\n            Token is invalid, try <Link to='/options'>updating the token</Link> on the options page\n          </span>\n        );\n        break;\n      case 'network error':\n        message = 'Error trying to connect to GitHub servers';\n        break;\n      default:\n        message = this.props.github.error;\n        break;\n    }\n\n    return (\n      <Alert type='danger'>\n        {message}\n      </Alert>\n    );\n  }\n\n  renderAlerts() {\n    const tokenWarning = this.renderTokenWarning();\n    const error = this.renderErrors();\n\n    if (tokenWarning || error) {\n      return (\n        <div className=\"alert-group\">\n          { tokenWarning }\n          { error }\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  renderRepositoriesList() {\n    if (this.props.preference.viewType === 'grid') {\n      return <RepositoryGrid\n        repositories={this.props.github.repositories || []}\n        dateJump={this.props.preference.dateJump}\n      />;\n    }\n\n    return <RepositoryList\n      repositories={this.props.github.repositories || []}\n      dateJump={this.props.preference.dateJump}\n    />;\n  }\n\n  hasRepositories() {\n    return this.props.github.repositories && this.props.github.repositories.length !== 0;\n  }\n\n  render() {\n    return (\n      <div className=\"page-wrap\">\n        <TopNav />\n\n        <div className=\"container mb-5 pb-4\">\n          <div className=\"header-row clearfix\">\n            <GroupHeading\n              dateJump={this.props.preference.dateJump}\n              language={this.props.preference.language} />\n            <div className=\"group-filters\">\n              <Filters\n                selectedLanguage={this.props.preference.language}\n                selectedViewType={this.props.preference.viewType}\n                updateLanguage={this.props.updateLanguage}\n                updateViewType={this.props.updateViewType}\n                updateDateJump={this.props.updateDateJump}\n                selectedDateJump={this.props.preference.dateJump}\n              />\n            </div>\n          </div>\n          <div className=\"body-row\">\n            {this.hasRepositories() && this.renderRepositoriesList()}\n\n            {this.props.github.processing && <Loader />}\n\n            {\n              false &&\n              !this.props.github.processing &&\n              this.hasRepositories() &&\n              (\n                <button className=\"btn btn-primary shadow load-next-date\"\n                  onClick={() => this.fetchNextRepositories()}>\n                  <i className=\"fa fa-refresh mr-2\"></i>\n                  Load next {this.props.preference.dateJump}\n                </button>\n              )\n            }\n          </div>\n          {!this.props.github.processing && !this.hasRepositories()\n            && <Alert type=\"warning\" className=\"no-trending-data\">\n              Trending repositories results are currently being dissected.\n              This may be a few minutes. <a href={this.getCorrespondingGitHubLink()}>\n              You can visit GitHub's trending page instead.</a>\n            </Alert>}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    preference: store.preference,\n    github: store.github\n  };\n};\n\nconst mapDispatchToProps = {\n  updateLanguage,\n  updateViewType,\n  updateDateJump,\n  fetchTrending\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedContainer);\n","import { UPDATE_DATE_TYPE, UPDATE_LANGUAGE, UPDATE_OPTIONS, UPDATE_VIEW_TYPE } from './types';\n\nexport const updateOptions = function (options) {\n  return dispatch => {\n    dispatch({\n      type: UPDATE_OPTIONS,\n      payload: options,\n    });\n  };\n};\n\nexport const updateViewType = function (viewType = 'grid') {\n  return dispatch => {\n    dispatch({\n      type: UPDATE_VIEW_TYPE,\n      payload: viewType\n    });\n  };\n};\n\nexport const updateLanguage = function (language) {\n  return dispatch => {\n    dispatch({\n      type: UPDATE_LANGUAGE,\n      payload: language\n    });\n  };\n};\n\nexport const updateDateJump = function (dateJump) {\n  return dispatch => {\n    dispatch({\n      type: UPDATE_DATE_TYPE,\n      payload: dateJump\n    });\n  };\n};\n","import axios from 'axios';\n\nimport {\n  FETCH_TRENDING_FAILED,\n  FETCH_TRENDING_SUCCESS,\n  PROCESS_FETCH_TRENDING,\n} from './types';\n\nconst TRENDING_API_URL = 'https://github-trending-api.now.sh/repositories';\n// const TRENDING_API_URL = 'http://localhost:8080/repositories';\n\nconst transformFilters = (filters) => {\n  const transformedFilters = {};\n\n  // const startMoment = moment(filters.dateRange.start);\n  // const endMoment = moment(filters.dateRange.end);\n  // const reposDate = `created:${startMoment.format()}..${endMoment.format()}`;\n  // const reposLanguage = filters.language ? `language:${filters.language} ` : '';\n\n  if (filters.token) {\n    transformedFilters.access_token = filters.token;\n  }\n\n  // transformedFilters.q = reposLanguage + reposDate;\n  // transformedFilters.sort = 'stars';\n  // transformedFilters.order = 'desc';\n\n  transformedFilters.language = filters.language\n  transformedFilters.since = {\n    'week': 'weekly',\n    'month': 'monthly',\n    // 'year': '',\n    'day': 'daily'\n  }[filters.dateJump]\n\n  return transformedFilters;\n};\n\n/**\n * @param {object} filters\n * @returns {Function}\n */\nexport const fetchTrending = function (filters) {\n  return dispatch => {\n    dispatch({ type: PROCESS_FETCH_TRENDING });\n\n    axios.get(TRENDING_API_URL, {\n      params: transformFilters(filters)\n    }).then(response => {\n      let reposities = response.data;\n\n      if (!response.data || response.data.length < 1) {\n        throw new Error('no response data.')\n      }\n      reposities.forEach((repo) => {\n        let ownerLogin = repo.author;\n        repo.html_url = repo.url;\n        repo.owner = {\n          login: ownerLogin,\n          html_url: `https://github.com/${ownerLogin}`,\n          avatar_url: `https://avatars.githubusercontent.com/${ownerLogin}?s=200&v=4`,\n        }\n      })\n      dispatch({\n        type: FETCH_TRENDING_SUCCESS,\n        payload: reposities\n      });\n    }).catch(error => {\n      let message = error.response &&\n        error.response.data &&\n        error.response.data.message;\n\n      if (!message) {\n        message = error.message;\n      }\n\n      dispatch({\n        type: FETCH_TRENDING_FAILED,\n        payload: message\n      });\n    });\n  };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\nimport Alert from '../alert';\n\nclass OptionsForm extends React.Component {\n\n  state = {\n    token: this.props.options.token,\n    success: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.options.token !== prevProps.options.token) {\n      this.setState({\n        success: true\n      });\n    }\n  }\n\n  saveOptions = () => {\n    this.props.updateOptions({\n      token: this.state.token\n    });\n  };\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      success: false\n    });\n  };\n\n  onKeyDown = (e) => {\n    if (e.keyCode === 13) {\n      this.saveOptions();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"options-form\">\n        <div className=\"form-field\">\n          <h2>Add the Token</h2>\n          <p className=\"text-muted\">Generate a token and add it below to avoid hitting the rate limit.</p>\n          <hr/>\n          <ul>\n            <li>\n              Go to the <a href=\"https://github.com/settings/tokens\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-external-link mr-1\"></i> Settings <i className=\"fa fa-angle-right\"></i> Personal Access Tokens</a> of your github profile\n            </li>\n            <li>Click <span>Generate New Token</span>. Enter the description and select the <span>scope</span> called <span>public_repo</span> under repo and click <span>Generate Token</span>.</li>\n            <li>You will be presented with the generated token. Copy the token and add it below</li>\n          </ul>\n          <input type=\"text\"\n                 name='token'\n                 onChange={ this.onChange }\n                 onKeyDown={ this.onKeyDown }\n                 className=\"form-control\"\n                 value={ this.state.token }/>\n        </div>\n        <button className=\"btn btn-dark btn-lg btn-save shadow\" onClick={ this.saveOptions }>\n          <i className=\"fa fa-cog mr-2\"></i>\n          Save Token\n        </button>\n        <Link className='btn btn-primary shadow btn-block btn-lg' to='/'>\n          <i className=\"fa fa-arrow-left mr-2\"></i> Go Home\n        </Link>\n\n        {\n          this.state.success && (\n            <div className=\"mt-4\">\n              <Alert type='warning'>Successfully updated</Alert>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nOptionsForm.propTypes = {\n  updateOptions: PropTypes.func.isRequired,\n  options: PropTypes.object.isRequired\n};\n\nexport default OptionsForm;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './styles.css';\nimport OptionsForm from '../../components/options-form';\nimport { updateOptions } from '../../redux/preference/actions';\n\nclass OptionsContainer extends React.Component {\n  render() {\n    return (\n      <div className=\"options-container\">\n        <div className=\"container shadow\">\n          <OptionsForm\n            updateOptions={ this.props.updateOptions }\n            options={ this.props.preference.options }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    preference: store.preference\n  };\n};\n\nconst mapDispatchToProps = {\n  updateOptions\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OptionsContainer);\n","import React from 'react';\nimport { MemoryRouter, Route, Switch } from 'react-router-dom';\n\nimport FeedContainer from '../containers/feed';\nimport OptionsContainer from '../containers/options';\n\nconst AppRoutes = () => {\n  return (\n    // @todo use browser router and generate prerendered options.html page for chrome extension\n    <MemoryRouter>\n      <Switch>\n        <Route exact path='/' component={ FeedContainer }/>\n        <Route exact path='/options' component={ OptionsContainer }/>\n        <Route component={ FeedContainer }/>\n      </Switch>\n    </MemoryRouter>\n  );\n};\n\nexport default AppRoutes;\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\n\nimport Launcher from './components/launcher';\nimport { persist, store } from './store';\nimport AppRoutes from './router';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={ store }>\n        <PersistGate loading={ <Launcher/> } persistor={ persist }>\n          <AppRoutes/>\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css'\n\nimport './global.css';\nimport App from './app';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}